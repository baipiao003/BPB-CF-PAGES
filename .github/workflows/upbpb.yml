name: Update BPB-Worker-Panel # 工作流名称

on:
  schedule:
    - cron: '0 3 * * *' # 每天 UTC 时间 03:00 运行（北京时间 11:00）
  workflow_dispatch: # 允许手动触发该工作流

permissions:
  contents: write # 允许写入仓库内容（用于 git push）

jobs:
  update-worker-js:
    runs-on: ubuntu-latest # 使用最新 Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # 拉取当前仓库代码

      - name: Get latest release info with worker.js
        id: get_release
        run: |
          set -e

          echo "Fetching latest release with worker.js..."
          api_url="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"

          asset_info=$(curl -s "$api_url" | jq -r '
            .[] 
            | select(.assets[]?.name == "worker.js") 
            | {
                version: .tag_name, 
                url: (.assets[] | select(.name == "worker.js") | .browser_download_url), 
                published: .published_at
              } 
            | @base64' | head -n 1)

          if [ -z "$asset_info" ]; then
            echo "Error: worker.js not found in any release"
            exit 1
          fi

          decode() {
            echo "$asset_info" | base64 --decode | jq -r "$1"
          }

          asset_url=$(decode '.url')
          version=$(decode '.version')
          published_at=$(decode '.published')

          echo "asset_url=$asset_url" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "published_at=$published_at" >> $GITHUB_OUTPUT

      - name: Download worker.js and add version header
        run: |
          curl -sL "${{ steps.get_release.outputs.asset_url }}" -o temp_worker.js
          {
            echo "// 版本: ${{ steps.get_release.outputs.version }}"
            echo "// 发布时间: ${{ steps.get_release.outputs.published_at }}"
            cat temp_worker.js
          } > _worker.js
          rm temp_worker.js

      - name: Check for changes or new file
        id: check_changes
        run: |
          if [ ! -f _worker.js ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          if git ls-files --error-unmatch _worker.js > /dev/null 2>&1; then
            if git diff --quiet _worker.js; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push if changed
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add _worker.js
          git commit -m "Update _worker.js to ${{ steps.get_release.outputs.version }}（发布时间：${{ steps.get_release.outputs.published_at }}）"
          git push
