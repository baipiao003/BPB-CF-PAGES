name: Update BPB-Worker-Panel

on:
  schedule:
    - cron: '0 3 * * *' # 每天 UTC 时间 03:00
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-worker-js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get release info (support nested assets)
        id: get_release
        run: |
          set -e
          
          api_url="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          echo "Fetching releases from: $api_url"
          
          releases=$(curl -s "$api_url")
          asset_url=""
          version=""

          # 外层按 release 拆分
          echo "$releases" | awk 'BEGIN{RS="},\\{"; ORS="}\n"} {print $0}' | while read -r release; do
            version=$(echo "$release" | grep '"tag_name":' | sed -E 's/.*"tag_name": ?"([^"]+)".*/\1/')

            # 内层查找包含 worker.js 的 asset
            echo "$release" | awk 'BEGIN{RS="\\{"; ORS="{"} {print $0}' | while read -r block; do
              echo "$block" | grep -q '"name": ?"worker\.js"' || continue
              asset_url=$(echo "$block" | grep 'browser_download_url' | sed -E 's/.*"browser_download_url": ?"([^"]+)".*/\1/')
              if [ -n "$asset_url" ]; then
                echo "Found asset in version: $version"
                echo "asset_url=$asset_url" >> $GITHUB_OUTPUT
                echo "version=$version" >> $GITHUB_OUTPUT
                exit 0
              fi
            done
          done

          echo "Error: worker.js not found in any release"
          exit 1

      - name: Download worker.js and add version header
        run: |
          curl -sL "${{ steps.get_release.outputs.asset_url }}" -o temp_worker.js
          echo "// Version: ${{ steps.get_release.outputs.version }}" > _worker.js
          cat temp_worker.js >> _worker.js
          rm temp_worker.js

      - name: Check for changes or new file
        id: check_changes
        run: |
          if [ ! -f _worker.js ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          if git ls-files --error-unmatch _worker.js > /dev/null 2>&1; then
            if git diff --quiet _worker.js; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push if changed
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add _worker.js
          git commit -m "chore: update _worker.js to ${{ steps.get_release.outputs.version }}"
          git push
